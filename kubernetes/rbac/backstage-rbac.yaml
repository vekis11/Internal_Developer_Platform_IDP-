apiVersion: v1
kind: ServiceAccount
metadata:
  name: backstage
  namespace: backstage
  labels:
    app.kubernetes.io/name: backstage
    app.kubernetes.io/part-of: internal-developer-platform
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: backstage-reader
  labels:
    app.kubernetes.io/name: backstage
    app.kubernetes.io/part-of: internal-developer-platform
rules:
  - apiGroups: [""]
    resources: ["pods", "services", "configmaps", "secrets", "namespaces", "nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["deployments", "replicasets", "statefulsets", "daemonsets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses", "networkpolicies"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["roles", "rolebindings", "clusterroles", "clusterrolebindings"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["argoproj.io"]
    resources: ["applications", "applicationSets", "projects"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["helm.fluxcd.io"]
    resources: ["helmreleases"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: backstage-reader-binding
  labels:
    app.kubernetes.io/name: backstage
    app.kubernetes.io/part-of: internal-developer-platform
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: backstage-reader
subjects:
  - kind: ServiceAccount
    name: backstage
    namespace: backstage
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: backstage-admin
  namespace: development
  labels:
    app.kubernetes.io/name: backstage
    app.kubernetes.io/part-of: internal-developer-platform
rules:
  - apiGroups: [""]
    resources: ["pods", "services", "configmaps", "secrets", "persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["apps"]
    resources: ["deployments", "replicasets", "statefulsets", "daemonsets"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses", "networkpolicies"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["roles", "rolebindings"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: backstage-admin-binding
  namespace: development
  labels:
    app.kubernetes.io/name: backstage
    app.kubernetes.io/part-of: internal-developer-platform
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: backstage-admin
subjects:
  - kind: ServiceAccount
    name: backstage
    namespace: backstage
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: backstage-admin
  namespace: staging
  labels:
    app.kubernetes.io/name: backstage
    app.kubernetes.io/part-of: internal-developer-platform
rules:
  - apiGroups: [""]
    resources: ["pods", "services", "configmaps", "secrets", "persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["apps"]
    resources: ["deployments", "replicasets", "statefulsets", "daemonsets"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses", "networkpolicies"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["roles", "rolebindings"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: backstage-admin-binding
  namespace: staging
  labels:
    app.kubernetes.io/name: backstage
    app.kubernetes.io/part-of: internal-developer-platform
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: backstage-admin
subjects:
  - kind: ServiceAccount
    name: backstage
    namespace: backstage
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: backstage-reader
  namespace: production
  labels:
    app.kubernetes.io/name: backstage
    app.kubernetes.io/part-of: internal-developer-platform
rules:
  - apiGroups: [""]
    resources: ["pods", "services", "configmaps", "secrets", "persistentvolumeclaims"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["deployments", "replicasets", "statefulsets", "daemonsets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses", "networkpolicies"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: backstage-reader-binding
  namespace: production
  labels:
    app.kubernetes.io/name: backstage
    app.kubernetes.io/part-of: internal-developer-platform
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: backstage-reader
subjects:
  - kind: ServiceAccount
    name: backstage
    namespace: backstage 